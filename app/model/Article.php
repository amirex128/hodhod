<?php

namespace App\model;

use App\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * App\model\Article
 *
 * @property int $id
 * @property int $user_id
 * @property string|null $title
 * @property string|null $description
 * @property string|null $body
 * @property string|null $image
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property \Illuminate\Support\Carbon|null $deleted_at
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\model\Category[] $categories
 * @property-read \App\User $user
 * @method static bool|null forceDelete()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article newQuery()
 * @method static \Illuminate\Database\Query\Builder|\App\model\Article onlyTrashed()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article query()
 * @method static bool|null restore()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereBody($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereDeletedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereDescription($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereImage($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereTitle($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\model\Article whereUserId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\model\Article withTrashed()
 * @method static \Illuminate\Database\Query\Builder|\App\model\Article withoutTrashed()
 * @mixin \Eloquent
 */
class Article extends Model
{
    use SoftDeletes;

    protected $guarded=['id'];

	public function user()
	{
		return $this->belongsTo(User::class);

	}

    public function getTable()
    {
        return parent::getTable(); // TODO: Change the autogenerated stub
    }

    public function categories()
	{
		return $this->morphToMany(Category::class, 'categorical');
		
	}

    public function media()
    {
        return $this->morphToMany(Media::class,"mediable");
	}
}
